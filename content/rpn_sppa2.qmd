---
title: "SPPA"
author: "jjh"
date: "Last compiled on `r format(Sys.time(), '%d %B, %Y %H:%M')`"
editor: visual
---

```{r, include = FALSE}
require(tidyverse)
require(spatstat)
require(rgdal)
require(sf)
require(stars)
require(terra)
require(unmarked)
require(AHMbook)
require(png) #bring png images into R platform
require(raster)
require(landscapemetrics)
require(gapminder)
require(wesanderson)
require(ggridges)
require(psych)
require(DHARMa)
```

## Quadrat Counts

### Southeast - Vaihu

```{r}
se_csv <- read.csv("vhu_centroids.csv")
```

```{r}
se_csv2 <- as_tibble(se_csv)
```

```{r, include = TRUE}
se_csv2 
```

### West - Manavai

```{r}
west_csv <- read.csv("man_centroids.csv")
```

```{r}
west_csv2 <- as_tibble(west_csv)
```

```{r, include = TRUE}
west_csv2 
```

### North - Anakena

```{r}
north_csv <- read.csv("ana_centroids.csv")
```

```{r}
north_csv2 <- as_tibble(north_csv)
```

```{r, include = TRUE}
north_csv2 
```

**Southeast** *Define window for spatial pattern analyses based on the extent defined above*

```{r}
se_window <- owin(c(0, 10), c(0, 25))
```

```{r}
attach(se_window)
```

```{r}
se_corals <- ppp(se_csv2$x, se_csv2$y, window = se_window)
```

**Summary information**

```{r}
summary(se_corals)
```

This summary shows there are 3131 points (pocilloporid coral colony) and provides the observed, lambda. The density plot can be a helpful visualization of intensity of points across the plot. By plotting the spatial intensity this way, spatial trends in the point occurrences that may violate the assumption of homogeneous point process.

**West** *Define window for spatial pattern analyses based on the extent defined above*

```{r}
west_window <- owin(c(0, 10), c(0, 25))
```

```{r}
attach(west_window)
```

```{r}
west_corals <- ppp(west_csv2$x, west_csv2$y, window = west_window)
```

**Summary information**

```{r}
summary(west_corals)
```

This summary shows there are XXX points (pocilloporid coral colony) and provides the observed, lambda. The density plot can be a helpful visualization of intensity of points across the plot. By plotting the spatial intensity this way, spatial trends in the point occurrences that may violate the assumption of homogeneous point process.

**North** *Define window for spatial pattern analyses based on the extent defined above*

```{r}
north_window <- owin(c(0, 10), c(0, 25))
```

```{r}
attach(north_window)
```

```{r}
north_corals <- ppp(north_csv2$x, north_csv2$y, window = north_window)
```

**Summary information**

```{r}
summary(north_corals)
```

This summary shows there are XXXX points (pocilloporid coral colony) and provides the observed, lambda. The density plot can be a helpful visualization of intensity of points across the plot. By plotting the spatial intensity this way, spatial trends in the point occurrences that may violate the assumption of homogeneous point process.

## Density Plots

```{r}
plot(
  density(se_corals)
)
```

```{r}
plot(
  density(west_corals)
)
```

```{r}
plot(
  density(north_corals)
)
```

**Alter smoothing parameter**

```{r}
plot(
  density(se_corals, 1)
)  
```

```{r}
plot(
  density(west_corals, 1)
)  
```

```{r}
plot(
  density(north_corals, 1)
)  
```

**Contour plot**

```{r}
contour(
  density(se_corals, 1)
)
```

```{r}
contour(
  density(west_corals, 1)
)
```

```{r}
contour(
  density(north_corals, 1)
)
```

We can also make tallies of counts of point locations based on quadrats overlaid on the plot. To determine whether these quadrat counts conform to CSR (i.e., a homogeneous Poisson process), use a simple Chi-Square test statistic.

**Quadrat counts**

Counts in 10 x 25 m quadrats

```{r}
se_Q <- quadratcount(se_corals, nx = 10, ny = 25)
```

**Plot**

```{r}
plot(se_corals, cex = 1)
plot(se_Q, add = TRUE, cex = 1)
```

**Chi-sq test for complete spatial randomness, CSR**

```{r}
quadrat.test(se_corals, nx = 10, ny = 25, method = "Chisq")
```

**Quadrat counts**

Counts in 10 x 25 m quadrats

```{r}
west_Q <- quadratcount(west_corals, nx = 10, ny = 25)
```

**Plot**

```{r}
plot(west_corals, cex = 1)
plot(west_Q, add = TRUE, cex = 1)
```

**Chi-sq test for complete spatial randomness, CSR**

```{r}
quadrat.test(west_corals, nx = 10, ny = 25, method = "Chisq")
```

The test statistic suggests highly a non-random point pattern at the scale of the quadrat defined. Note that this test is more akin to a first-order point pattern analysis because it is based on the dispersion of points among sampling quadrats.

**Quadrat counts**

Counts in 10 x 25 m quadrats

```{r}
north_Q <- quadratcount(north_corals, nx = 10, ny = 25)
```

**Plot**

```{r}
plot(north_corals, cex = 1)
plot(north_Q, add = TRUE, cex = 1)
```

**Chi-sq test for complete spatial randomness, CSR**

```{r}
quadrat.test(north_corals, nx = 10, ny = 25, method = "Chisq")
```

The test statistic suggests highly a non-random point pattern at the scale of the quadrat defined. Note that this test is more akin to a first-order point pattern analysis because it is based on the dispersion of points among sampling quadrats.

## Ripley's K function:

-   Second-order point pattern analyses can readily be implemented in 'spatstat'.
-   Ripley's K and the standard L functions
-   Ignore edge effects with '(correction = "none")'

### Southeast - Vaihu

```{r}
K_none_se <- Kest(se_corals, rmax = 5.0, correction = "none")
```

-   Plot K

```{r}
plot(K_none_se, legend = F, main = "Southeast: Ripley's K")
```

-   Plot L with 1:1 expectation

```{r}
L_none_se <- Lest(se_corals, rmax = 5.0, correction = "none")
```

```{r}
plot(L_none_se, legend = F, main = "Southeast: standardized L function (standardized 1:1)")
```

-   Plot L with 0 expectation

```{r}
plot(L_none_se, . - r ~ r, legend = F, main = "Southeast: standardized L function (standardized 0)")
```

### West - Manavai

```{r}
K_none_west <- Kest(west_corals, rmax = 5.0, correction = "none")
```

-   Plot K

```{r}
plot(K_none_west, legend = F, main = "West: Ripley's K")
```

-   Plot L with 1:1 expectation

```{r}
L_none_west <- Lest(west_corals, rmax = 5.0, correction = "none")
```

```{r}
plot(L_none_west, legend = F, main = "West: standardized L function (standardized 1:1)")
```

-   Plot L with 0 expectation

```{r}
plot(L_none_west, . - r ~ r, legend = F, main = "West: standardized L function (standardized 0)")
```

### North - Anakena

```{r}
K_none_north <- Kest(north_corals, rmax = 5.0, correction = "none")
```

-   Plot K

```{r}
plot(K_none_north, legend = F, main = "North: Ripley's K")
```

-   Plot L with 1:1 expectation

```{r}
L_none_north <- Lest(north_corals, rmax = 5.0, correction = "none")
```

```{r}
plot(L_none_north, legend = F, main = "North: standardized L function (standardized 1:1)")
```

-   Plot L with 0 expectation

```{r}
plot(L_none_north, . - r ~ r, legend = F, main = "North: standardized L function (standardized 0)")
```

The above analysis ignores the problem of edge effects. `spatstat` provides a variety of edge corrections. Contrast an (1) isotropic and (2) translate correction for adjusting for boundary effects. The isotropic correction uses a simple weighting for the area sampled near the plot boundary (Ripley 1988), the translate correction uses a toroidal shift. We adjust for potential boundary effects by typing:

### Southeast -- Vaihu

-   Isotropic edge correction

```{r}
L_iso_se <- Lest(se_corals, rmax = 5.0, correction = "isotropic")
```

```{r}
plot(L_iso_se, . - r ~ r, legend = F, main = "Southeast: standardzied L (isotropic correction)")
```

-   Translate (toroidal) edge correction

```{r}
L_trans_se <- Lest(se_corals, rmax = 5.0, correction = "trans")
```

```{r}
plot(L_trans_se, . - r ~ r, legend = F, main = "Southeast: standardzied L (translate correction)")
```

## Monte Carlo simulations to calculate a global and pointwise confidence envelope under CSR

```{r}
L_csr_se <- envelope(se_corals, rmax = 5.0, Lest, nsim = 99, rank = 1, correction = "trans", global = F)
```

```{r}
L_csr.g_se <- envelope(se_corals, rmax = 5.0, Lest, nsim = 99, rank = 1, correction = "trans", global = T)
```

-   Plot point-wise envelope

```{r}
plot(L_csr_se, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "Southeast: stand. L (Monte Carlo, CSR env)")
```

-   Plot global envelope

```{r}
plot(L_csr.g_se, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "Southeast: stand. L (Monte Carlo, CSR env)")
```

### West - Manavai

-   Isotropic edge correction

```{r}
L_iso_west <- Lest(west_corals, rmax = 5.0, correction = "isotropic")
```

```{r}
plot(L_iso_west, . - r ~ r, legend = F, main = "West: standardzied L (isotropic correction)")
```

-   Translate (toroidal) edge correction

```{r}
L_trans_west <- Lest(west_corals, rmax = 5.0, correction = "trans")
```

```{r}
plot(L_trans_west, . - r ~ r, legend = F, main = "West: standardzied L (translate correction)")
```

## Monte Carlo simulations to calculate a global and pointwise confidence envelope under CSR

```{r}
L_csr_se <- envelope(se_corals, rmax = 5.0, Lest, nsim = 99, rank = 1, correction = "trans", global = F)
```

```{r}
L_csr.g_se <- envelope(se_corals, rmax = 5.0, Lest, nsim = 99, rank = 1, correction = "trans", global = T)
```

-   Plot point-wise envelope

```{r}
plot(L_csr_se, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "Southeast: stand. L (Monte Carlo, CSR env)")
```

-   Plot global envelope

```{r}
plot(L_csr.g_se, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "Southeast: stand. L (Monte Carlo, CSR env)")
```

### North - Anakena

-   Isotropic edge correction

```{r}
L_iso_north <- Lest(north_corals, rmax = 5.0, correction = "isotropic")
```

```{r}
plot(L_iso_north, . - r ~ r, legend = F, main = "North: standardzied L (isotropic correction)")
```

-   Translate (toroidal) edge correction

```{r}
L_trans_north <- Lest(north_corals, rmax = 5.0, correction = "trans")
```

```{r}
plot(L_trans_north, . - r ~ r, legend = F, main = "North: standardzied L (translate correction)")
```

## Monte Carlo simulations to calculate a global and pointwise confidence envelope under CSR

```{r}
L_csr_north <- envelope(north_corals, rmax = 5.0, Lest, nsim = 99, rank = 1, correction = "trans", global = F)
```

```{r}
L_csr.g_north <- envelope(north_corals, rmax = 5.0, Lest, nsim = 99, rank = 1, correction = "trans", global = T)
```

-   Plot point-wise envelope

```{r}
plot(L_csr_north, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "North: stand. L (Monte Carlo, CSR env)")
```

-   Plot global envelope

```{r}
plot(L_csr.g_north, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "North: stand. L (Monte Carlo, CSR env)")
```

For the functions above, two lines are drawn. The $L_{pois}$ line is a dashed line that represents the expected (theoretical) value based on a Poisson process (CSR). The way that `spatstat` calculates $L$ is to linearize $K$ such that the expected value is $r$ (or the radius). The other solid line represents the estimated $L$ (linearized $K$), when the edges are ignored.

When comparing the $L$ function that ignores boundaries to those above that account for boundaries, notice that patterns change at larger distances - we expect that the $L$ function at larger distances should potentially be more biased than at smaller distances because larger radii will naturally overlap more with the boundary of the study area.

When edge effects are ignored, the effect in the of counting fewer points within the radius $r$ near the boundary, so the observed value for $L$ or $K$ should have an artifact of decreasing as $r$ increases.

The analyses so far are exploratory. While the observed statistics ($K$, $L$) appear different than the expectation, it is unclear if these are substantially (or significantly) different.

To conduct formal inference regarding if the point pattern follows CSR, we can use Monte Carlo simulations ro calculate a confidence envelope under CSR with the `envelope` function.

In the `envelope` function, rank specifies the alpha for the simulations. For a *rank = 1*, the max an min are used as the envelopes, such that for **99 simulations, alpha = 0.01** while for **19 simulations, alpha = 0.05**.

Also not that we used `global = FALSE`. This means that these are *pointwise envelopes*.

These envelopes work better for $L$ than $K$ because of variance stabilizing properties.

Plots of pointwise envelopes show the stated upper and lower quantiles of simulated patterns for any distance r. Because such analyses are calculating envelopes for vhuy distances, pointwise envelopes with a specified alpha should not be used to reject a null model at that level (because of the multiple tests). Consequently, there are alternative global tests that can be used in this way. While global tests are under active development (Baddeley et al. 2014; Wiegand et al. 2016), `spatstat` does provide one option for a global test (using global = T).

This approach estimates the maximum deviation from the Poisson point process across all r (i.e., $D = max|K_{(r)} - K_{pois(r)}|)$. This approach is referred to as a simultaneous envelope (or critical band) rather than a pointwise envelope.

If the observed line falls outside the simultaneous envelope at any point on $r$, we would reject the null hypothesis.

### Southeast -- Vaihu

```{r}
Ptrans_se <- pcf(se_corals, r = NULL, correction = "translate")
```

```{r}
plot(Ptrans_se)
```

```{r}
plot(Ptrans_se$r, Ptrans_se$pcf, type = "l", xlab = "r", ylab = "g(r)", main = "pair correlation")
abline(h=1, lty=1)
```

```{r}
Penv_se <- envelope(se_corals, r = NULL, pcf, nsim = 99, rank = 1, correction =
                       "translate", global = FALSE)
```

```{r}
plot(Penv_se, shade = c("hi", "lo"), legend = FALSE, main = "Southeast: pair correlation function, g")
```

### West - Manavai

```{r}
Ptrans_west <- pcf(west_corals, r = NULL, correction = "translate")
```

```{r}
plot(Ptrans_west)
```

```{r}
plot(Ptrans_west$r, Ptrans_west$pcf, type = "l", xlab = "r", ylab = "g(r)", main = "pair correlation")
abline(h=1, lty=1)
```

```{r}
Penv_west <- envelope(west_corals, r = NULL, pcf, nsim = 99, rank = 1, correction =
                       "translate", global = FALSE)
```

```{r}
plot(Penv_west, shade = c("hi", "lo"), legend = FALSE, main = "Southeast: pair correlation function, g")
```

### North - Anakena

```{r}
Ptrans_north <- pcf(north_corals, r = NULL, correction = "translate")
```

```{r}
plot(Ptrans_north)
```

```{r}
plot(Ptrans_north$r, Ptrans_north$pcf, type = "l", xlab = "r", ylab = "g(r)", main = "pair correlation")
abline(h = 1, lty = 1)
```

```{r}
Penv_north <- envelope(north_corals, r = NULL, pcf, nsim = 99, rank = 1, correction =
                       "translate", global = FALSE)
```

```{r}
plot(Penv_north, shade = c("hi", "lo"), legend = FALSE, main = "North: pair correlation function, g")
```

The `pcf` function uses a smoothing kernel such that distance bins are not needed.

The default bandwidth coefficient (related to sigma in a Gaussian kernel) for the smoothing kernel is set to 0.15 (Stoyan and Stoyan 1994).

We can adjust the smoothing on the pair correlation function using the `stoyan` comvhud in the `pcf` function.

Increasing the value of the bandwidth coefficient (e.g., stoyan = 0.4) results in a less wiggly *g* function.

Finally, we can use similar arguments for the G-function to estimate the probability of finding a nearest neighbor as a function of distance.

`spatstat` uses a similar approach as above with the `Gest` function.

Note that for `Gest`, there are subtly different ways to account for edge effects relative to above. Below we use `rs`, the reduced sample correction.

We can check the observed G-function calculated by `spatstat` to the cumulative distribution function of the empirical data (with the `ecdf` function):

### Southeast -- Vaihu

```{r}
Gtrans_se <- Gest(se_corals, r = NULL, correction = "rs")
```

```{r}
plot(Gtrans_se, legend = F)
```

```{r}
Genv_se <- envelope(se_corals, r = NULL, Gest, nsim = 99, rank = 1, correction = "rs", global = FALSE)
```

```{r}
plot(Genv_se, shade = c("hi", "lo"), legend = FALSE, main = "Southeast: G-function")
```

### West - Manavai

```{r}
Gtrans_west <- Gest(west_corals, r = NULL, correction = "rs")
```

```{r}
plot(Gtrans_west, legend = F)
```

```{r}
Genv_west <- envelope(west_corals, r = NULL, Gest, nsim = 99, rank = 1, correction = "rs", global = FALSE)
```

```{r}
plot(Genv_west, shade = c("hi", "lo"), legend = FALSE, main = "West: G-function")
```

### North - Anakena

```{r}
Gtrans_north <- Gest(north_corals, r = NULL, correction = "rs")
```

```{r}
plot(Gtrans_north, legend = F)
```

```{r}
Genv_north <- envelope(north_corals, r = NULL, Gest, nsim = 99, rank = 1, correction = "rs", global = FALSE)
```

```{r}
plot(Genv_north, shade = c("hi", "lo"), legend = FALSE, main = "North: G-function")
```

### Alternative Null Models

While CSR is a useful starting point as a null model, in some situations we may be interested in using alternative null models. Some null models can be derived from a Poisson cluster process. Two common Poisson cluster processes considered in ecology are **Matern cluster** processes and **Thomas cluster** processes (Velazquez et al. 2016). In a Matérn cluster process, there are two types of points. The first are *parent* points, which have a Poisson distribution. Second, for each parent point, there are *offspring* points, which are independently and uniformly distributed around the parent points within a radius r. Consequently, these *offspring* points generate an underlying aggregated pattern. Similarly, with a Thomas process, *offspring* points are generated with parents but with an isotropic Gaussian distribution (similar to a Gaussian kernel). Such a process could reflect biological phenomena such as seed dispersal from parent plants. We can use these alternative null models in `spatstat`, with the above functions ($K$, $L$, *pair correlation g*, etc.). For example, a `K` function with a Thomas process as a null model can be quantified as:

### Southeast -- Vaihu

```{r}
Kthomas_se <- kppm(se_corals, ~ 1, "Thomas")
```

```{r}
Kthomas_se
```

```{r}
summary(Kthomas_se)
```

```{r}
Kthomas.env_se <- envelope(Kthomas_se, rmax = 5, Lest, nsim = 99, rank = 1, global = F)
```

```{r}
plot(Kthomas.env_se, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "Southeast: Thomas Model")
```

### West - Manavai

```{r}
Kthomas_west <- kppm(west_corals, ~ 1, "Thomas")
```

```{r}
Kthomas_west
```

```{r}
summary(Kthomas_west)
```

```{r}
Kthomas.env_west <- envelope(Kthomas_west, rmax = 5, Lest, nsim = 99, rank = 1, global = F)
```

```{r}
plot(Kthomas.env_west, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "West: Thomas Model")
```

### North - Anakena

```{r}
Kthomas_north <- kppm(north_corals, ~ 1, "Thomas")
```

```{r}
Kthomas_north
```

```{r}
summary(Kthomas_north)
```

```{r}
Kthomas.env_north <- envelope(Kthomas_north, rmax = 5, Lest, nsim = 99, rank = 1, global = F)
```

```{r}
plot(Kthomas.env_north, . - r ~ r, shade = c("hi", "lo"), legend = F, main = "North: Thomas Model")
```
