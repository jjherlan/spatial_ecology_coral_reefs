---
title: "SPPA"
author: "jjh"
date: "Last compiled on `r format(Sys.time(), '%d %B, %Y %H:%M')`"
editor: visual
---

```{r, include = FALSE}
require(tidyverse)
require(spatstat)
require(rgdal)
require(sf)
require(stars)
require(terra)
require(unmarked)
require(AHMbook)
require(png) #bring png images into R platform
require(raster)
require(landscapemetrics)
require(gapminder)
require(wesanderson)
require(ggridges)
require(psych)
require(DHARMa)
```

## Quadrat Count

### Vaihu

```{r}
vhu_csv <- read.csv("vhu_centroids.csv")
```

```{r}
vhu_csv2 <- as_tibble(vhu_csv)
```

```{r, include = TRUE}
vhu_csv2 
```

**Define window for spatial pattern analyses based on the extent defined above**

```{r}
vhu_window <- owin(c(0, 10), c(0, 25))
```

```{r}
attach(vhu_window)
```

```{r}
vhu_corals <- ppp(vhu_csv2$x, vhu_csv2$y, window = vhu_window)
```

**Summary information**

```{r}
summary(vhu_corals)
```

This summary shows there are 3131 points (pocilloporid coral colony) and provides the observed, lambda. The density plot can be a helpful visualization of intensity of points across the plot. By plotting the spatial intensity this way, spatial trends in the point occurrences that may violate the assumption of homogeneous point process.

**Density plots**

```{r}
plot(
  density(vhu_corals)
)
```

**Alter smoothing parameter**

```{r}
plot(
  density(vhu_corals, 1)
)  
```

**Contour plot**

```{r}
contour(
  density(vhu_corals, 1)
)
```

We can also make tallies of counts of point locations based on quadrats overlaid on the plot. To determine whether these quadrat counts conform to CSR (i.e., a homogeneous Poisson process), use a simple Chi-Square test statistic.

**Quadrat counts**

Counts in 10 x 25 m quadrats

```{r}
vhu_Q <- quadratcount(vhu_corals, nx = 10, ny = 25)
```

**Plot**

```{r}
plot(vhu_corals, cex = 1)
plot(vhu_Q, add = TRUE, cex = 1)
```

**Chi-sq test for complete spatial randomness, CSR**

```{r}
quadrat.test(vhu_corals, nx = 10, ny = 25, method = "Chisq")
```

The test statistic suggests highly a non-random point pattern at the scale of the quadrat defined. Note that this test is more akin to a first-order point pattern analysis because it is based on the dispersion of points among sampling quadrats.

### West - Manavai

```{r}
man_csv <- read.csv("man_centroids.csv")
```

```{r}
man_csv2 <- as_tibble(man_csv)
```

```{r, include = TRUE}
man_csv2 
```

**Define window for spatial pattern analyses based on the extent defined above**

```{r}
man_window <- owin(c(0, 10), c(0, 25))
```

```{r}
attach(man_window)
```

```{r}
man_corals <- ppp(man_csv2$x, man_csv2$y, window = man_window)
```

**Summary information**

```{r}
summary(man_corals)
```

This summary shows there are 3131 points (pocilloporid coral colony) and provides the observed, lambda. The density plot can be a helpful visualization of intensity of points across the plot. By plotting the spatial intensity this way, spatial trends in the point occurrences that may violate the assumption of homogeneous point process.

**Density plots**

```{r}
plot(
  density(man_corals)
)
```

**Alter smoothing parameter**

```{r}
plot(
  density(man_corals, 1)
)  
```

**Contour plot**

```{r}
contour(
  density(man_corals, 1)
)
```

We can also make tallies of counts of point locations based on quadrats overlaid on the plot. To determine whether these quadrat counts conform to CSR (i.e., a homogeneous Poisson process), use a simple Chi-Square test statistic.

**Quadrat counts**

Counts in 10 x 25 m quadrats

```{r}
man_Q <- quadratcount(man_corals, nx = 10, ny = 25)
```

**Plot**

```{r}
plot(man_corals, cex = 1)
plot(man_Q, add = TRUE, cex = 1)
```

**Chi-sq test for complete spatial randomness, CSR**

```{r}
quadrat.test(man_corals, nx = 10, ny = 25, method = "Chisq")
```

### North - Anakena

```{r}
ana_csv <- read.csv("ana_centroids.csv")
```

```{r}
ana_csv2 <- as_tibble(ana_csv)
```

```{r, include = TRUE}
ana_csv2 
```

**Define window for spatial pattern analyses based on the extent defined above**

```{r}
ana_window <- owin(c(0, 10), c(0, 25))
```

```{r}
attach(ana_window)
```

```{r}
ana_corals <- ppp(ana_csv2$x, ana_csv2$y, window = ana_window)
```

**Summary information**

```{r}
summary(ana_corals)
```

This summary shows there are 3131 points (pocilloporid coral colony) and provides the observed, lambda. The density plot can be a helpful visualization of intensity of points across the plot. By plotting the spatial intensity this way, spatial trends in the point occurrences that may violate the assumption of homogeneous point process.

**Density plots**

```{r}
plot(
  density(ana_corals)
)
```

**Alter smoothing parameter**

```{r}
plot(
  density(ana_corals, 1)
)  
```

**Contour plot**

```{r}
contour(
  density(ana_corals, 1)
)
```

We can also make tallies of counts of point locations based on quadrats overlaid on the plot. To determine whether these quadrat counts conform to CSR (i.e., a homogeneous Poisson process), use a simple Chi-Square test statistic.

**Quadrat counts**

Counts in 10 x 25 m quadrats

```{r}
ana_Q <- quadratcount(ana_corals, nx = 10, ny = 25)
```

**Plot**

```{r}
plot(ana_corals, cex = 1)
plot(ana_Q, add = TRUE, cex = 1)
```

**Chi-sq test for complete spatial randomness, CSR**

```{r}
quadrat.test(ana_corals, nx = 10, ny = 25, method = "Chisq")
```

The test statistic suggests highly a non-random point pattern at the scale of the quadrat defined. Note that this test is more akin to a first-order point pattern analysis because it is based on the dispersion of points among sampling quadrats.

## Ripley's K function:

 - Second-order point pattern analyses can readily be implemented in 'spatstat'.
 - Ripley's K and the standard L functions
 - Ignore edge effects with '(correction = "none")'

### Southeast - Vaihu

```{r}
K_none_vhu <- Kest(vhu_corals, rmax = 5.0, correction = "none")
```

 - Plot K

```{r}
plot(K_none_vhu, legend = F, main = "Southeast: Ripley's K")
```

### West - Manavai

```{r}
K_none_man <- Kest(man_corals, rmax = 5.0, correction = "none")
```

 - Plot K

```{r}
plot(K_none_man, legend = F, main = "West: Ripley's K")
```

### North - Anakena


```{r}
K_none_ana <- Kest(ana_corals, rmax = 5.0, correction = "none")
```

 - Plot K

```{r}
plot(K_none_ana, legend = F, main = "North: Ripley's K")
```

















