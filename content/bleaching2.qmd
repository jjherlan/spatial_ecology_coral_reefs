---
title: "Percent Cover and Bleaching in 2015"
author: "jjh"
date: "Last compiled on `r format(Sys.time(), '%d %B, %Y %H:%M')`"
editor: visual
---

```{r, include = FALSE}
require(tidyverse)
require(plyr)
require(betareg)
require(lmtest)
require(glmmTMB)
require(boot)
require(emmeans)
require(brms)
require(mvtnorm)
require(nlme)
require(rstan)
require(VGAM)
require(Rmisc)
require(car)
require(multcomp)
```

```{r, incluse = FALSE}
rpn_bleach <- read.csv('rpn_bleach_2015.csv') %>%
  as_tibble() %>%
  mutate_at(vars(location, depth, transect, group, status), factor)
```

```{r}
rpn_bleach
```

```{r}
rpn_summary <- rpn_bleach %>%  
  group_by(location, depth, transect, group) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_summary
```


```{r}
rpn_PLOB <- rpn_bleach %>%  
  filter(group == "PLOB") %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_PLOB
```

```{r}
rpn_plob <- read.csv('rpn_cover.csv') %>%
  as_tibble() %>%
  filter(group == "PLOB") %>%
  mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/total_points,
  failures = total_points - total_count
    )
```

```{r, inlcude = FALSE}
rpn_plob
```

## Porites

### Generalized linear model

```{r}
plob.glm <- glm(cbind(total_count, failures) ~ location * depth, 
                    family = binomial(link = "logit"), 
                    data = rpn_plob)
```

```{r}
par(mfrow = c(2, 2))
plot(plob.glm)
```

```{r}
summary(plob.glm)
```

#### https://www.rpubs.com/daharo_calpoly/502695

```{r}
rpn_plob$groups <- interaction(rpn_plob$location, rpn_plob$depth)
```

## Create a post-hoc model

```{r}
model_plob <- with(rpn_plob, glm(cbind(total_count, failures) ~ groups, family = binomial))
```

## Determine the post-hoc comparisons of interest

```{r}
summary(glht(model_plob, 
             linfct = mcp(groups =
                     #Is the difference between these groups different from zero?
                     c("(north.sh) - (west.sh) = 0",
                       "(north.sh) - (west.dp) = 0",
                       "(north.sh) - (se.sh) = 0",
                       "(north.sh) - (se.dp) = 0",
                       "(north.dp) - (west.sh) = 0",
                       "(north.dp) - (west.dp) = 0",
                       "(north.dp) - (se.sh) = 0",
                       "(north.dp) - (se.dp) = 0",
                       "(se.sh) - (west.sh) = 0",
                       "(se.sh) - (west.dp) = 0",
                       "(se.dp) - (west.sh) = 0",
                       "(se.dp) - (west.dp) = 0"))),
        test = adjusted("holm"))
```

```{r}
rpn_plob2 <- read.csv('rpn_cover.csv') %>%
  as_tibble() %>%
  filter(group == "PLOB") %>%
  mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/total_points,
  failures = total_points - total_count
    ) %>%
  group_by(location, depth) %>%
  dplyr::summarize(mean = mean(cover), 
                   sd = sd(cover), 
                   n = n(),
                   se = sd/sqrt(n)
  ) %>%
  mutate(se = sd / sqrt(n),
         lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
         upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
```

```{r}
rpn_plob2
```

```{r}
rpn_plob3 <-
  as_tibble(rpn_plob2)
```

```{r}
rpn_plob_summ <-
    rpn_plob3 %>%
    add_column(coast = rep(c('North', 'Southeast', 'West'), each = 2)) %>%
    add_column(depth2 = rep(c('15 m', '8 m'), times = 3)) %>%
    mutate_at(vars(coast, depth2), factor)
```

```{r}
rpn_plob_summ
```


```{r}
rpn_plob_summ.gg <- rpn_plob_summ %>%
  mutate(coast = factor(coast, levels = c("North", "West", "Southeast")),
          depth2 = factor(depth2, levels = c('8 m', '15 m')
                                )
                )
```

```{r}
rpn_plob_summ.gg <- rpn_plob_summ %>%
  mutate(coast = factor(coast, levels = c('North', 'West', 'Southeast')),
          depth2 = factor(depth2, levels = c('8 m', '15 m')
                                )
                )
```

```{r}
rpn_plob_summ.gg
```

```{r}
x_labels = c("North", "West", "Southeast")
```

```{r}
label_names = c("8 m" = "8 m", "15 m" = "15 m")
```

```{r}
rpn_plob_2015.ggbarplot <- ggplot(rpn_plob_summ.gg, aes(x = coast, y = mean, fill = coast)) + 
  scale_x_discrete(expand = c(0, 1), labels = x_labels) + 
  geom_bar(stat = "identity", width = 0.75, color = "black", linewidth = 0.50, alpha = 0.6) +
  facet_wrap( ~ depth2, labeller = as_labeller(label_names), dir = "v", ncol = 1)
```

```{r}
rpn_plob_2015.ggbarplot <- ggplot(rpn_plob_summ.gg, aes(x = factor(coast, x_labels), y = mean, fill = coast)) +   
  geom_bar(stat = "identity", width = 0.75, color = "black", linewidth = 0.50, alpha = 0.6) +
  geom_linerange(aes(ymin = mean, ymax = mean + sd), linewidth = 0.75) +
  scale_y_continuous(expression(paste("Percent Cover")), limits = c(0, 1.0), 
                     labels = function(x) paste0(x*100)) + 
  scale_x_discrete(expand = c(0, 1), labels = x_labels) + 
  scale_fill_manual(values = c("#FFC74E", "#82A5C0", "#ABC178")) + #
  facet_wrap( ~ depth2, labeller = as_labeller(label_names), dir = "v", ncol = 1) + 
  #ggtitle(expression(paste(italic(" Pocillopora "), "spp."))) +
  #geom_text(aes(label = cld, y = upper.ci), vjust = -0.5, size = 10) +
  #scale_y_log10(expression(paste("Colony Size (", cm^2, ")"), limits = c(0, 100000))) +
  labs(x = NULL) +
  theme(strip.text = element_text(size = 10, color = "black", hjust = 0.50),
        strip.background = element_rect(fill = "#FFFFFF", color = NA),    
        panel.background = element_rect(fill = "#FFFFFF", color = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.y = element_line(color = "#b2b2b2"),
        panel.spacing.x = unit(1, "cm"),
        panel.spacing.y = unit(0.5, "cm"),
        panel.spacing = unit(1, "lines"),
        axis.ticks = element_blank(),
        legend.position = 'none',
        #plot.title = element_text(size = 11),
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 12),
        axis.title.y = element_text(size = 14),
        legend.title = element_blank())
```

```{r}
rpn_plob_2015.ggbarplot
```

```{r}
rpn_plob_bleach <- rpn_bleach %>%  
  filter(group == 'PLOB' & status == 'BL') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_plob_pb <- rpn_bleach %>% 
  filter(group == 'PLOB' & status == 'PB') %>% 
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_plob_pb
```

```{r}
rpn_plob_pb2 <-
as.data.frame(rpn_plob_pb) %>%
  add_row(location = 'se', depth = 'dp', transect = 'two', total_count = 0) %>%
  add_row(location = 'se', depth = 'sh', transect = 'one', total_count = 0) %>%
  add_row(location = 'se', depth = 'sh', transect = 'two', total_count = 0)
```

```{r}
rpn_plob_pb.main <- rpn_plob_pb2 %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_plob_pb.main
```

```{r}
rpn_plob_pale <- rpn_bleach %>%  
  filter(group == 'PLOB' & status == 'P') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_plob_pale
```

```{r}
rpn_plob_pale.main <- rpn_plob_pale %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_plob_pale.main
```

```{r}
rpn_plob_healthy <- rpn_bleach %>%  
  filter(group == 'PLOB' & status == 'H') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_plob_healthy
```

```{r}
rpn_plob_healthy2 <-
as.data.frame(rpn_plob_healthy) %>%
  add_row(location = 'se', depth = 'dp', transect = 'two', total_count = 0) %>%
  add_row(location = 'west', depth = 'sh', transect = 'two', total_count = 0)
```

```{r}
rpn_plob_healthy2
```

```{r}
rpn_plob_healthy.main <- rpn_plob_healthy2 %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_plob_healthy.main 
```

## Pocillopora

```{r, incluse = FALSE}
rpn_bleach <- read.csv('rpn_bleach_2015.csv') %>%
  as_tibble() %>%
  mutate_at(vars(location, depth, transect, group, status), factor)
```

```{r}
rpn_bleach
```

```{r}
rpn_summary <- rpn_bleach %>%  
  group_by(location, depth, transect, group) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_POCI <- rpn_bleach %>%  
  filter(group == "POCI") %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_POCI
```

```{r}
rpn_poci <- read.csv('rpn_cover.csv') %>%
  as_tibble() %>%
  filter(group == "POCI") %>%
  mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/total_points,
  failures = total_points - total_count
    )
```

```{r, inlcude = FALSE}
rpn_plob
```

## Pocillopora

### Generalized linear model

```{r}
poci.glm <- glm(cbind(total_count, failures) ~ location * depth, 
                    family = binomial(link = "logit"), 
                    data = rpn_poci)
```

```{r}
par(mfrow = c(2, 2))
plot(poci.glm)
```

```{r}
summary(poci.glm)
```

#### https://www.rpubs.com/daharo_calpoly/502695

```{r}
rpn_poci$groups <- interaction(rpn_poci$location, rpn_poci$depth)
```

## Create a post-hoc model

```{r}
model_poci <- with(rpn_poci, glm(cbind(total_count, failures) ~ groups, family = binomial))
```

## Determine the post-hoc comparisons of interest

```{r}
summary(glht(model_poci, 
             linfct = mcp(groups =
                     #Is the difference between these groups different from zero?
                     c("(north.sh) - (west.sh) = 0",
                       "(north.sh) - (west.dp) = 0",
                       "(north.sh) - (se.sh) = 0",
                       "(north.sh) - (se.dp) = 0",
                       "(north.dp) - (west.sh) = 0",
                       "(north.dp) - (west.dp) = 0",
                       "(north.dp) - (se.sh) = 0",
                       "(north.dp) - (se.dp) = 0",
                       "(se.sh) - (west.sh) = 0",
                       "(se.sh) - (west.dp) = 0",
                       "(se.dp) - (west.sh) = 0",
                       "(se.dp) - (west.dp) = 0"))),
        test = adjusted("holm"))
```

```{r}
rpn_poci2 <- read.csv('rpn_cover.csv') %>%
  as_tibble() %>%
  filter(group == "POCI") %>%
  mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/total_points,
  failures = total_points - total_count
    ) %>%
  group_by(location, depth) %>%
  dplyr::summarize(mean = mean(cover), 
                   sd = sd(cover), 
                   n = n(),
                   se = sd/sqrt(n)
  ) %>%
  mutate(se = sd / sqrt(n),
         lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
         upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
```

```{r}
rpn_poci2
```

```{r}
rpn_poci3 <-
  as_tibble(rpn_poci2)
```

```{r}
rpn_poci_summ <-
    rpn_poci3 %>%
    add_column(coast = rep(c('North', 'Southeast', 'West'), each = 2)) %>%
    add_column(depth2 = rep(c('15 m', '8 m'), times = 3)) %>%
    mutate_at(vars(coast, depth2), factor)
```

```{r}
rpn_poci_summ
```

```{r}
rpn_poci_summ.gg <- rpn_poci_summ %>%
  mutate(coast = factor(coast, levels = c("North", "West", "Southeast")),
          depth2 = factor(depth2, levels = c('8 m', '15 m')
                                )
                )
```

```{r}
rpn_poci_summ.gg <- rpn_poci_summ %>%
  mutate(coast = factor(coast, levels = c('North', 'West', 'Southeast')),
          depth2 = factor(depth2, levels = c('8 m', '15 m')
                                )
                )
```

```{r}
rpn_poci_summ.gg
```

```{r}
x_labels = c("North", "West", "Southeast")
```

```{r}
label_names = c("8 m" = "8 m", "15 m" = "15 m")
```

```{r}
rpn_poci_2015.ggbarplot <- ggplot(rpn_poci_summ.gg, aes(x = coast, y = mean, fill = coast)) + 
  scale_x_discrete(expand = c(0, 1), labels = x_labels) + 
  geom_bar(stat = "identity", width = 0.75, color = "black", linewidth = 0.50, alpha = 0.6) +
  facet_wrap( ~ depth2, labeller = as_labeller(label_names), dir = "v", ncol = 1)
```

```{r}
rpn_poci_2015.ggbarplot <- ggplot(rpn_poci_summ.gg, aes(x = factor(coast, x_labels), y = mean, fill = coast)) +   
  geom_bar(stat = "identity", width = 0.75, color = "black", linewidth = 0.50, alpha = 0.6) +
  geom_linerange(aes(ymin = mean, ymax = mean + sd), linewidth = 0.75) +
  scale_y_continuous(expression(paste("Percent Cover")), limits = c(0, 1.0), 
                     labels = function(x) paste0(x*100)) + 
  scale_x_discrete(expand = c(0, 1), labels = x_labels) + 
  scale_fill_manual(values = c("#FFC74E", "#82A5C0", "#ABC178")) + #
  facet_wrap( ~ depth2, labeller = as_labeller(label_names), dir = "v", ncol = 1) + 
  #ggtitle(expression(paste(italic(" Pocillopora "), "spp."))) +
  #geom_text(aes(label = cld, y = upper.ci), vjust = -0.5, size = 10) +
  #scale_y_log10(expression(paste("Colony Size (", cm^2, ")"), limits = c(0, 100000))) +
  labs(x = NULL) +
  theme(strip.text = element_text(size = 10, color = "black", hjust = 0.50),
        strip.background = element_rect(fill = "#FFFFFF", color = NA),    
        panel.background = element_rect(fill = "#FFFFFF", color = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.y = element_line(color = "#b2b2b2"),
        panel.spacing.x = unit(1, "cm"),
        panel.spacing.y = unit(0.5, "cm"),
        panel.spacing = unit(1, "lines"),
        axis.ticks = element_blank(),
        legend.position = 'none',
        #plot.title = element_text(size = 11),
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 12),
        axis.title.y = element_text(size = 14),
        legend.title = element_blank())
```

```{r}
rpn_poci_2015.ggbarplot
```

# Pocillopora Bleaching

```{r}
rpn_poci_bleach <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'BL') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_bleach
```

```{r}
rpn_poci_bleach2 <-
as.data.frame(rpn_poci_bleach) %>%
  add_row(location = 'north', depth = 'sh', transect = 'one', total_count = 0) %>%
  add_row(location = 'north', depth = 'sh', transect = 'two', total_count = 0) %>%
  add_row(location = 'north', depth = 'dp', transect = 'two', total_count = 0) %>%
  add_row(location = 'west', depth = 'sh', transect = 'one', total_count = 0) %>%
  add_row(location = 'west', depth = 'dp', transect = 'two', total_count = 0) %>%
  add_row(location = 'se', depth = 'sh', transect = 'two', total_count = 0)
```

```{r}
rpn_poci_bleach2
```

```{r}
rpn_poci_bleach.main <- rpn_poci_bleach2 %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_poci_bleach.main 
```

```{r}
rpn_poci_pb <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'PB') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_pb
```

```{r}
rpn_poci_pb2 <-
as.data.frame(rpn_poci_pb) %>%
  add_row(location = 'north', depth = 'sh', transect = 'one', total_count = 0) %>%
  add_row(location = 'north', depth = 'sh', transect = 'two', total_count = 0) %>%
  add_row(location = 'west', depth = 'sh', transect = 'two', total_count = 0) %>%
  add_row(location = 'west', depth = 'dp', transect = 'one', total_count = 0)
```

```{r}
rpn_poci_pb2
```

```{r}
rpn_poci_pb.main <- rpn_poci_pb2 %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_poci_pb.main 
```

```{r}
rpn_poci_pale <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'P') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_pale
```

```{r}
rpn_poci_pale2 <-
as.data.frame(rpn_poci_pale) %>%
  add_row(location = 'north', depth = 'sh', transect = 'one', total_count = 0) %>%
  add_row(location = 'north', depth = 'sh', transect = 'two', total_count = 0)
```

```{r}
rpn_poci_pale2
```

```{r}
rpn_poci_pale.main <- rpn_poci_pale2 %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_poci_pale.main 
```

```{r}
rpn_poci_healthy <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'H') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_healthy
```

```{r}
rpn_poci_healthy2 <-
as.data.frame(rpn_poci_healthy) %>%
  add_row(location = 'north', depth = 'sh', transect = 'one', total_count = 0) %>%
  add_row(location = 'north', depth = 'dp', transect = 'two', total_count = 0) %>%
  add_row(location = 'se', depth = 'dp', transect = 'two', total_count = 0)
```

```{r}
rpn_poci_healthy.main <- rpn_poci_healthy2 %>%
  #as_tibble() %>%
  #filter(group == "PLOB") %>%
  #mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/126,
  failures = 126 - total_count
    )
```

```{r}
rpn_poci_healthy.main
```

### 

### Generalized linear model

```{r, include = FALSE}
rpn_poci <- read.csv('rpn_cover.csv') %>%
  as_tibble() %>%
  filter(group == "POCI") %>%
  mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
    cover = total_count/total_points,
    failures = total_points - total_count
  )
```

```{r}
rpn_poci
```

```{r}
poci.glm <- glm(cbind(total_count, failures) ~ location * depth, 
                family = binomial(link = "logit"), 
                data = rpn_poci)
```

```{r}
par(mfrow = c(2, 2))
plot(poci.glm)
```

```{r}
summary(poci.glm)
```

`Anova` function from the `car` package

```{r}
Anova(poci.glm, type = "III") # Type III because...
```

#### https://www.rpubs.com/daharo_calpoly/502695

```{r}
rpn_poci$groups <- interaction(rpn_poci$location, rpn_poci$depth)
```

## Create a post-hoc model

```{r}
model_poci <- with(rpn_poci, glm(cbind(total_count, failures) ~ groups, family = binomial))
```

## Determine the post-hoc comparisons of interest

```{r}
summary(glht(model_poci, 
             linfct = mcp(groups =
                     #Is the difference between these groups different from zero?
                     c("(north.sh) - (west.sh) = 0",
                       "(north.sh) - (west.dp) = 0",
                       "(north.sh) - (se.sh) = 0",
                       "(north.sh) - (se.dp) = 0",
                       "(north.dp) - (west.sh) = 0",
                       "(north.dp) - (west.dp) = 0",
                       "(north.dp) - (se.sh) = 0",
                       "(north.dp) - (se.dp) = 0",
                       "(se.sh) - (west.sh) = 0",
                       "(se.sh) - (west.dp) = 0",
                       "(se.dp) - (west.sh) = 0",
                       "(se.dp) - (west.dp) = 0"))),
        test = adjusted("holm"))
```

```{r}
rpn_poci_bleach <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'BL') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_bleach
```

```{r}
rpn_poci_pb <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'PB') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_pb
```

```{r}
rpn_poci_pale <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'P') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_pale
```

```{r}
rpn_poci_healthy <- rpn_bleach %>%  
  filter(group == 'POCI' & status == 'H') %>%
  group_by(location, depth, transect) %>%
  dplyr::summarise(total_count = n())
```

```{r}
rpn_poci_healthy
```

## Examine bleaching response of coral groups

```{r}
rpn_plob_pb.glm <- glm(cbind(total_count, failures) ~ location * depth, 
                family = binomial(link = "logit"), 
                data = rpn_plob_pb.main)
```

```{r}
par(mfrow = c(2, 2))
plot(rpn_plob_pb.glm)
```

```{r}
summary(rpn_plob_pb.glm)
```

`Anova` function from the `car` package

```{r}
Anova(rpn_plob_pb.glm, type = "III") # Type III because...
```

```{r}
rpn_plob_pb.main
```

#### https://www.rpubs.com/daharo_calpoly/502695

```{r}
rpn_plob_pb.main$groups <- interaction(rpn_plob_pb.main$location, rpn_plob_pb.main$depth)
```

## Create a post-hoc model

```{r}
rpn_plob_pb.lm <- with(rpn_plob_pb.main, glm(cbind(total_count, failures) ~ groups, family = binomial))
```

## Determine the post-hoc comparisons of interest

```{r}
summary(glht(rpn_plob_pb.lm, 
             linfct = mcp(groups =
                     #Is the difference between these groups different from zero?
                     c("(north.sh) - (west.sh) = 0",
                       "(north.sh) - (west.dp) = 0",
                       "(north.sh) - (se.sh) = 0",
                       "(north.sh) - (se.dp) = 0",
                       "(north.dp) - (west.sh) = 0",
                       "(north.dp) - (west.dp) = 0",
                       "(north.dp) - (se.sh) = 0",
                       "(north.dp) - (se.dp) = 0",
                       "(se.sh) - (west.sh) = 0",
                       "(se.sh) - (west.dp) = 0",
                       "(se.dp) - (west.sh) = 0",
                       "(se.dp) - (west.dp) = 0"))),
        test = adjusted("holm"))
```
## Pocillopora

### Generalized linear model

```{r}
poci.glm <- glm(cbind(total_count, failures) ~ location * depth, 
                    family = binomial(link = "logit"), 
                    data = rpn_poci)
```

```{r}
par(mfrow = c(2, 2))
plot(poci.glm)
```

```{r}
summary(poci.glm)
```

#### https://www.rpubs.com/daharo_calpoly/502695

```{r}
rpn_poci$groups <- interaction(rpn_poci$location, rpn_poci$depth)
```

## Create a post-hoc model

```{r}
model_poci <- with(rpn_poci, glm(cbind(total_count, failures) ~ groups, family = binomial))
```

## Determine the post-hoc comparisons of interest

```{r}
summary(glht(model_poci, 
             linfct = mcp(groups =
                     #Is the difference between these groups different from zero?
                     c("(north.sh) - (west.sh) = 0",
                       "(north.sh) - (west.dp) = 0",
                       "(north.sh) - (se.sh) = 0",
                       "(north.sh) - (se.dp) = 0",
                       "(north.dp) - (west.sh) = 0",
                       "(north.dp) - (west.dp) = 0",
                       "(north.dp) - (se.sh) = 0",
                       "(north.dp) - (se.dp) = 0",
                       "(se.sh) - (west.sh) = 0",
                       "(se.sh) - (west.dp) = 0",
                       "(se.dp) - (west.sh) = 0",
                       "(se.dp) - (west.dp) = 0"))),
        test = adjusted("holm"))
```

```{r}
rpn_poci2 <- read.csv('rpn_cover.csv') %>%
  as_tibble() %>%
  filter(group == "POCI") %>%
  mutate_at(vars(location, depth, transect, group), factor) %>%
  mutate(
  cover = total_count/total_points,
  failures = total_points - total_count
    ) %>%
  group_by(location, depth) %>%
  dplyr::summarize(mean = mean(cover), 
                   sd = sd(cover), 
                   n = n(),
                   se = sd/sqrt(n)
  ) %>%
  mutate(se = sd / sqrt(n),
         lower.ci = mean - qt(1 - (0.05 / 2), n - 1) * se,
         upper.ci = mean + qt(1 - (0.05 / 2), n - 1) * se)
```

```{r}
rpn_poci2
```

```{r}
rpn_poci3 <-
  as_tibble(rpn_poci2)
```

```{r}
rpn_poci_summ <-
    rpn_poci3 %>%
    add_column(coast = rep(c('North', 'Southeast', 'West'), each = 2)) %>%
    add_column(depth2 = rep(c('15 m', '8 m'), times = 3)) %>%
    mutate_at(vars(coast, depth2), factor)
```

```{r}
rpn_poci_summ
```

```{r}
rpn_poci_summ.gg <- rpn_poci_summ %>%
  mutate(coast = factor(coast, levels = c("North", "West", "Southeast")),
          depth2 = factor(depth2, levels = c('8 m', '15 m')
                                )
                )
```

```{r}
rpn_poci_summ.gg <- rpn_poci_summ %>%
  mutate(coast = factor(coast, levels = c('North', 'West', 'Southeast')),
          depth2 = factor(depth2, levels = c('8 m', '15 m')
                                )
                )
```

```{r}
rpn_poci_summ.gg
```

```{r}
x_labels = c("North", "West", "Southeast")
```

```{r}
label_names = c("8 m" = "8 m", "15 m" = "15 m")
```

```{r}
rpn_poci_2015.ggbarplot <- ggplot(rpn_poci_summ.gg, aes(x = coast, y = mean, fill = coast)) + 
  scale_x_discrete(expand = c(0, 1), labels = x_labels) + 
  geom_bar(stat = "identity", width = 0.75, color = "black", linewidth = 0.50, alpha = 0.6) +
  facet_wrap( ~ depth2, labeller = as_labeller(label_names), dir = "v", ncol = 1)
```

```{r}
rpn_poci_2015.ggbarplot <- ggplot(rpn_poci_summ.gg, aes(x = factor(coast, x_labels), y = mean, fill = coast)) +   
  geom_bar(stat = "identity", width = 0.75, color = "black", linewidth = 0.50, alpha = 0.6) +
  geom_linerange(aes(ymin = mean, ymax = mean + sd), linewidth = 0.75) +
  scale_y_continuous(expression(paste("Percent Cover")), limits = c(0, 1.0), 
                     labels = function(x) paste0(x*100)) + 
  scale_x_discrete(expand = c(0, 1), labels = x_labels) + 
  scale_fill_manual(values = c("#FFC74E", "#82A5C0", "#ABC178")) + #
  facet_wrap( ~ depth2, labeller = as_labeller(label_names), dir = "v", ncol = 1) + 
  #ggtitle(expression(paste(italic(" Pocillopora "), "spp."))) +
  #geom_text(aes(label = cld, y = upper.ci), vjust = -0.5, size = 10) +
  #scale_y_log10(expression(paste("Colony Size (", cm^2, ")"), limits = c(0, 100000))) +
  labs(x = NULL) +
  theme(strip.text = element_text(size = 10, color = "black", hjust = 0.50),
        strip.background = element_rect(fill = "#FFFFFF", color = NA),    
        panel.background = element_rect(fill = "#FFFFFF", color = NA),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.y = element_line(color = "#b2b2b2"),
        panel.spacing.x = unit(1, "cm"),
        panel.spacing.y = unit(0.5, "cm"),
        panel.spacing = unit(1, "lines"),
        axis.ticks = element_blank(),
        legend.position = 'none',
        #plot.title = element_text(size = 11),
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 12),
        axis.title.y = element_text(size = 14),
        legend.title = element_blank())
```

```{r}
rpn_poci_2015.ggbarplot
```






